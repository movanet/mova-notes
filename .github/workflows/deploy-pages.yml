name: Deploy to GitHub Pages

# Trigger on pushes to master branch when docs/ folder changes
on:
  push:
    branches:
      - master
    paths:
      - 'docs/**'
  # Allow manual trigger
  workflow_dispatch:

# Sets permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper git operations

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Verify docs/ folder exists
        run: |
          if [ ! -d "docs" ]; then
            echo "Error: docs/ folder not found!"
            exit 1
          fi
          echo "docs/ folder found with $(find docs -type f | wc -l) files"

      - name: Update sitemap timestamp (optional)
        run: |
          if [ -f "docs/sitemap.xml" ]; then
            echo "Sitemap found - updating timestamp"
            # Update lastmod dates in sitemap to current time
            sed -i "s|<lastmod>.*</lastmod>|<lastmod>$(date -u +%Y-%m-%dT%H:%M:%S+00:00)</lastmod>|g" docs/sitemap.xml || true
          else
            echo "No sitemap found - skipping update"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment summary
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåê Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "üì¶ Deployed $(find docs -type f | wc -l) files"
